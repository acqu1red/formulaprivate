#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Lava Top API
"""

import os
import requests
import json
from datetime import datetime

# Lava Top –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
LAVA_SHOP_ID = os.getenv('LAVA_SHOP_ID', '1b9f3e05-86aa-4102-9648-268f0f586bb1')
LAVA_SECRET_KEY = os.getenv('LAVA_SECRET_KEY', 'whjKvjpi2oqAjTOwfbt0YUkulXCxjU5PWUJDxlQXwOuhOCNSiRq2jSX7Gd2Zihav')

def test_lava_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–≤–æ–π—Å–∞ —á–µ—Ä–µ–∑ Lava Top API"""
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Lava Top API...")
        print(f"üîë LAVA_SHOP_ID: {LAVA_SHOP_ID}")
        print(f"üîë LAVA_SECRET_KEY: {LAVA_SECRET_KEY[:20]}...")
        
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω–≤–æ–π—Å–∞
        invoice_data = {
            "shop_id": LAVA_SHOP_ID,
            "amount": 5000,  # 50 RUB –≤ –∫–æ–ø–µ–π–∫–∞—Ö
            "currency": "RUB",
            "order_id": f"test_order_{int(datetime.now().timestamp())}",
            "hook_url": f"https://formulaprivate-productionpaymentuknow.up.railway.app/lava-webhook",
            "success_url": "https://t.me/+6SQb4RwwAmZlMWQ6",
            "fail_url": "https://t.me/+6SQb4RwwAmZlMWQ6",
            "metadata": {
                "user_id": "123456789",
                "telegram_id": "123456789",
                "tariff": "1_month",
                "email": "test@example.com"
            }
        }
        
        print(f"üì§ –î–∞–Ω–Ω—ã–µ –∏–Ω–≤–æ–π—Å–∞: {json.dumps(invoice_data, indent=2)}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Lava Top API
        api_url = "https://lava.top/api/invoice/create"
        headers = {
            "Authorization": f"Bearer {LAVA_SECRET_KEY}",
            "Content-Type": "application/json",
            "Accept": "application/json"
        }
        
        print(f"üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫: {api_url}")
        print(f"üì° Headers: {headers}")
        
        response = requests.post(api_url, json=invoice_data, headers=headers)
        print(f"üì° –û—Ç–≤–µ—Ç API: {response.status_code}")
        print(f"üì° –û—Ç–≤–µ—Ç —Ç–µ–∫—Å—Ç: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: {json.dumps(result, indent=2)}")
            
            # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –æ–ø–ª–∞—Ç—ã
            payment_url = result.get('data', {}).get('url')
            if payment_url:
                print(f"üîó URL –¥–ª—è –æ–ø–ª–∞—Ç—ã: {payment_url}")
                return True
            else:
                print(f"‚ùå URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")
        import traceback
        print(f"üìã Traceback: {traceback.format_exc()}")
        return False

if __name__ == '__main__':
    success = test_lava_api()
    if success:
        print("‚úÖ –¢–µ—Å—Ç Lava Top API –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –¢–µ—Å—Ç Lava Top API –Ω–µ –ø—Ä–æ—à–µ–ª!")
