#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –Ω–∞ Railway
"""

import os
import requests
import json

def setup_railway_webhook():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç webhook –¥–ª—è Railway –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Railway –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º URL –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    railway_url = input("–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ Railway –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://your-app.railway.app): ").strip()
    
    if not railway_url:
        print("‚ùå URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
        return False
    
    # –£–±–∏—Ä–∞–µ–º —Å–ª–µ—à –≤ –∫–æ–Ω—Ü–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    if railway_url.endswith('/'):
        railway_url = railway_url[:-1]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π URL webhook
    webhook_url = f"{railway_url}/webhook"
    
    print(f"\nüì° Webhook URL: {webhook_url}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    try:
        health_response = requests.get(f"{railway_url}/health", timeout=10)
        if health_response.status_code == 200:
            print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ")
        else:
            print(f"‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {health_response.status_code}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {e}")
        print("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É webhook...")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –≤ Telegram
    print(f"\nü§ñ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –≤ Telegram...")
    
    bot_token = "7593794536:AAGSiEJolK1O1H5LMtHxnbygnuhTDoII6qc"
    webhook_secret = "telegram_webhook_secret_2024"
    
    webhook_data = {
        "url": webhook_url,
        "secret_token": webhook_secret
    }
    
    try:
        response = requests.post(
            f"https://api.telegram.org/bot{bot_token}/setWebhook",
            json=webhook_data,
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            if result['ok']:
                print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ Telegram!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
                print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å webhook...")
                status_response = requests.get(f"https://api.telegram.org/bot{bot_token}/getWebhookInfo")
                if status_response.status_code == 200:
                    status_data = status_response.json()
                    if status_data['ok']:
                        webhook_info = status_data['result']
                        print(f"üîó URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
                        print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_info.get('is_set', False)}")
                        print(f"üìä –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {webhook_info.get('pending_update_count', 0)}")
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result.get('description', 'Unknown error')}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")
        return False

def setup_lava_webhook(railway_url):
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook –≤ Lava Top"""
    
    print("\n" + "=" * 50)
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –≤ Lava Top")
    print("=" * 50)
    
    lava_webhook_url = f"{railway_url}/lava-webhook"
    
    print(f"üì° Lava Top webhook URL: {lava_webhook_url}")
    print(f"üîë Secret: lava_webhook_secret_2024_secure_key")
    
    print("\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("1. –í–æ–π–¥–∏—Ç–µ –≤ [Lava Top Dashboard](https://app.lava.top)")
    print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞")
    print("3. –ù–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª 'Webhooks' –∏–ª–∏ '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'")
    print("4. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π webhook:")
    print(f"   - URL: {lava_webhook_url}")
    print("   - –ú–µ—Ç–æ–¥: POST")
    print("   - –°–æ–±—ã—Ç–∏—è: payment.success")
    print("   - Secret: lava_webhook_secret_2024_secure_key")
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Railway –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram webhook
    if setup_railway_webhook():
        # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è Lava Top
        railway_url = input("\n–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ Railway –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –µ—â–µ —Ä–∞–∑ –¥–ª—è Lava Top: ").strip()
        if railway_url.endswith('/'):
            railway_url = railway_url[:-1]
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Lava Top webhook
        setup_lava_webhook(railway_url)
        
        print("\n" + "=" * 50)
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("=" * 50)
        print("\nüéØ –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Railway Dashboard")
        print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É")
        print("3. –°–¥–µ–ª–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ Lava Top")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ")
        
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")

if __name__ == '__main__':
    main()
