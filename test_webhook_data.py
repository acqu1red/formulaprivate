#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç Mini Apps
"""

import requests
import json

def test_webhook_with_mini_apps_data():
    """–¢–µ—Å—Ç webhook —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç Mini Apps"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç Mini Apps...")
    
    # –î–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Mini Apps
    webhook_data = {
        "update_id": 123456789,
        "message": {
            "message_id": 1,
            "from": {
                "id": 123456789,
                "is_bot": False,
                "first_name": "Test",
                "username": "testuser"
            },
            "chat": {
                "id": 123456789,
                "type": "private"
            },
            "date": 1234567890,
            "web_app_data": {
                "data": json.dumps({
                    "step": "final_data",
                    "email": "test@example.com",
                    "tariff": "1_month",
                    "price": 50.0,
                    "userId": "123456789"
                }),
                "button_text": "–û–ø–ª–∞—Ç–∏—Ç—å"
            }
        }
    }
    
    try:
        response = requests.post(
            "https://formulaprivate-productionpaymentuknow.up.railway.app/webhook",
            json=webhook_data,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"‚úÖ Webhook –æ—Ç–≤–µ—Ç: {response.status_code} - {response.text}")
        return response.status_code == 200
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ webhook: {e}")
        return False

def test_api_endpoint():
    """–¢–µ—Å—Ç API endpoint"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint...")
    
    data = {
        "user_id": "123456789",
        "email": "test@example.com",
        "tariff": "1_month",
        "price": 50.0
    }
    
    try:
        response = requests.post(
            "https://formulaprivate-productionpaymentuknow.up.railway.app/api/create-payment",
            json=data,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"‚úÖ API –æ—Ç–≤–µ—Ç: {response.status_code} - {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            payment_url = result.get('payment_url')
            if payment_url:
                print(f"‚úÖ –°—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {payment_url}")
                return True
            else:
                print("‚ùå –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ—Ç–≤–µ—Ç–µ")
                return False
        else:
            print(f"‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: Webhook —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç Mini Apps
    print("\nüß™ –¢–µ—Å—Ç 1: Webhook —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç Mini Apps")
    result1 = test_webhook_with_mini_apps_data()
    
    # –¢–µ—Å—Ç 2: API endpoint
    print("\nüß™ –¢–µ—Å—Ç 2: API endpoint")
    result2 = test_api_endpoint()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("=" * 50)
    print(f"Webhook —Å Mini Apps: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if result1 else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    print(f"API endpoint: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if result2 else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    
    if result1 and result2:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway.")

if __name__ == "__main__":
    main()
