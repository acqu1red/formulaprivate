#!/usr/bin/env python3
"""
–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç Mini Apps –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
"""

import requests
import json
from datetime import datetime

def test_complete_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç Mini Apps –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞"""
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å...")
        
        # –®–∞–≥ 1: –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint –Ω–∞–ø—Ä—è–º—É—é
        print("üì° –®–∞–≥ 1: –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint...")
        api_data = {
            "user_id": "123456789",
            "email": "test@example.com",
            "tariff": "1_month",
            "price": 50.0
        }
        
        response = requests.post(
            "https://formulaprivate-productionpaymentuknow.up.railway.app/api/create-payment",
            json=api_data,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"   API —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   API –æ—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ API endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        else:
            print("‚ö†Ô∏è API endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –±–æ—Ç –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω)")
        
        # –®–∞–≥ 2: –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —á–µ—Ä–µ–∑ Mini Apps
        print("\nüì° –®–∞–≥ 2: –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —á–µ—Ä–µ–∑ Mini Apps...")
        
        final_data = {
            "step": "final_data",
            "email": "test@example.com",
            "tariff": "1_month",
            "price": 50.0,
            "userId": "123456789"
        }
        
        webhook_data = {
            "update_id": int(datetime.now().timestamp()),
            "message": {
                "message_id": 1,
                "from": {
                    "id": 123456789,
                    "first_name": "Test",
                    "username": "testuser",
                    "is_bot": False
                },
                "chat": {
                    "id": 123456789,
                    "type": "private"
                },
                "date": int(datetime.now().timestamp()),
                "web_app_data": {
                    "data": json.dumps(final_data),
                    "button_text": "–û–ø–ª–∞—Ç–∏—Ç—å"
                }
            }
        }
        
        response = requests.post(
            "https://formulaprivate-productionpaymentuknow.up.railway.app/webhook",
            json=webhook_data,
            headers={"Content-Type": "application/json"}
        )
        
        print(f"   Webhook —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   Webhook –æ—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        else:
            print("‚ùå Webhook –æ—à–∏–±–∫–∞")
        
        # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook Lava Top
        print("\nüì° –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook Lava Top...")
        
        response = requests.get("https://formulaprivate-productionpaymentuknow.up.railway.app/lava-webhook")
        print(f"   Lava webhook —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   Lava webhook –æ—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ Lava webhook —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        else:
            print("‚ùå Lava webhook –æ—à–∏–±–∫–∞")
        
        print("\nüéØ –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:")
        print("‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ Lava webhook —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚ö†Ô∏è API endpoint —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Railway")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        print(f"üìã Traceback: {traceback.format_exc()}")
        return False

if __name__ == '__main__':
    success = test_complete_flow()
    if success:
        print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("üìã –î–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Railway —Å –Ω–æ–≤—ã–º –∫–æ–¥–æ–º")
    else:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª!")
