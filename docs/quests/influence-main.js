/* ===== INFLUENCE EMPIRE MAIN ===== */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let empireEngine = null;
let empireUI = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–≤–µ—Å—Ç–∞ "–ò–º–ø–µ—Ä–∏—è –≤–ª–∏—è–Ω–∏—è"...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –¥–≤–∏–∂–∫–∞ –∏ UI
    empireEngine = new InfluenceEmpireEngine();
    empireUI = new InfluenceEmpireUI(empireEngine);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    empireEngine.initialize();
    empireUI.initialize();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
    empireUI.startHintRotation();
    
    console.log('‚úÖ –ò–º–ø–µ—Ä–∏—è –≤–ª–∏—è–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–≤–µ—Å—Ç–∞:', error);
    showErrorMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–≤–µ—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(event) {
  console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
  
  if (empireUI) {
    empireUI.showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.', 'error');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
window.addEventListener('unhandledrejection', function(event) {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –ø—Ä–æ–º–∏—Å:', event.reason);
  
  if (empireUI) {
    empireUI.showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.', 'error');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', function(event) {
  if (empireEngine && empireEngine.getGameState().isRunning) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
    empireEngine.saveProgress();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    event.preventDefault();
    event.returnValue = '–í–∞—à–∞ –∏–º–ø–µ—Ä–∏—è –≤–ª–∏—è–Ω–∏—è –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω–∞. –í—ã —É–≤–µ—Ä–µ–Ω—ã?';
    return event.returnValue;
  }
});

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function showErrorMessage(message) {
  const errorDiv = document.createElement('div');
  errorDiv.style.cssText = `
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: linear-gradient(135deg, #ff4444, #cc3333);
    color: white;
    padding: 24px;
    border-radius: 16px;
    font-size: 16px;
    font-weight: 600;
    z-index: 10000;
    max-width: 400px;
    text-align: center;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.6);
    border: 2px solid rgba(255, 255, 255, 0.2);
  `;
  
  errorDiv.innerHTML = `
    <div style="margin-bottom: 16px; font-size: 32px;">üëëüí•</div>
    <div style="margin-bottom: 16px; font-size: 18px;">–û—à–∏–±–∫–∞ –∏–º–ø–µ—Ä–∏–∏</div>
    <div style="margin-bottom: 20px; font-weight: 400; line-height: 1.4;">${message}</div>
    <button onclick="location.reload()" style="
      background: white;
      color: #ff4444;
      border: none;
      padding: 12px 24px;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      font-size: 14px;
      transition: all 0.3s ease;
    " onmouseover="this.style.transform='scale(1.05)'" onmouseout="this.style.transform='scale(1)'">
      üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–º–ø–µ—Ä–∏—é
    </button>
  `;
  
  document.body.appendChild(errorDiv);
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∫–≤–µ—Å—Ç–æ–≤
function getQuestProgress() {
  if (!empireEngine) return null;
  
  const gameState = empireEngine.getGameState();
  
  return {
    isCompleted: !gameState.isRunning && gameState.currentStage > EMPIRE_CONFIG.stages,
    progress: Math.round((gameState.currentStage - 1) / EMPIRE_CONFIG.stages * 100),
    followers: gameState.metrics.followers,
    revenue: gameState.metrics.revenue,
    influence: gameState.metrics.influence,
    reputation: gameState.metrics.reputation,
    timeSpent: gameState.startTime ? Date.now() - gameState.startTime : 0
  };
}

function getQuestRewards() {
  if (!empireEngine) return null;
  
  const gameState = empireEngine.getGameState();
  
  if (gameState.isRunning || gameState.currentStage <= EMPIRE_CONFIG.stages) {
    return null; // –ö–≤–µ—Å—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω
  }
  
  const finalMetrics = empireEngine.calculateFinalMetrics();
  return empireEngine.calculateRewards(finalMetrics);
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–º–ø–µ—Ä–∏–∏
function getEmpireSummary() {
  if (!empireEngine) return null;
  
  return empireEngine.generateEmpireSummary();
}

function getInfluenceAnalytics() {
  if (!empireEngine) return null;
  
  const gameState = empireEngine.getGameState();
  const platformStats = empireEngine.getPlatformStats();
  
  return {
    totalMetrics: gameState.metrics,
    platformBreakdown: platformStats,
    strategiesUsed: gameState.placedStrategies.length,
    eventsExperienced: gameState.events.length,
    stageProgress: gameState.stageProgress,
    recommendations: empireEngine.getRecommendations()
  };
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    empireEngine,
    empireUI,
    getQuestProgress,
    getQuestRewards,
    getEmpireSummary,
    getInfluenceAnalytics
  };
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)
if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
  window.debugEmpire = {
    engine: () => empireEngine,
    ui: () => empireUI,
    addFollowers: (count) => {
      if (empireEngine) {
        empireEngine.gameState.metrics.followers += count;
        empireUI.updateEmpireInterface();
      }
    },
    addInfluence: (points) => {
      if (empireEngine) {
        empireEngine.gameState.metrics.influence += points;
        empireUI.updateEmpireInterface();
      }
    },
    triggerEvent: () => {
      if (empireEngine) {
        const event = empireEngine.generateRandomEvent();
        if (event && empireUI) {
          empireUI.showEvent(event);
          empireUI.updateEmpireInterface();
        }
      }
    },
    skipToStage: (stage) => {
      if (empireEngine && empireUI) {
        empireEngine.gameState.currentStage = Math.min(stage, EMPIRE_CONFIG.stages);
        empireUI.loadStrategiesForStage(empireEngine.gameState.currentStage);
        empireUI.updateEmpireInterface();
      }
    },
    completeEmpire: () => {
      if (empireEngine && empireUI) {
        empireEngine.gameState.currentStage = EMPIRE_CONFIG.stages + 1;
        empireUI.completeEmpire();
      }
    },
    getAnalytics: () => getInfluenceAnalytics(),
    maxMetrics: () => {
      if (empireEngine) {
        empireEngine.gameState.metrics.followers = 10000000;
        empireEngine.gameState.metrics.revenue = 1000000;
        empireEngine.gameState.metrics.influence = 100;
        empireEngine.gameState.metrics.reputation = 100;
        empireUI.updateEmpireInterface();
      }
    }
  };
  
  console.log('üîß Debug —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.debugEmpire');
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
function trackEmpireStart() {
  console.log('üìä –ò–º–ø–µ—Ä–∏—è –≤–ª–∏—è–Ω–∏—è –Ω–∞—á–∞—Ç–∞');
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
}

function trackStrategyPlaced(strategyId, platform) {
  console.log('üìä –°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–∞–∑–º–µ—â–µ–Ω–∞:', { strategyId, platform });
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
}

function trackEmpireComplete(results) {
  console.log('üìä –ò–º–ø–µ—Ä–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', results);
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
}

// –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
function checkEmpireAchievements(gameState) {
  const achievements = [];
  
  if (gameState.metrics.followers >= 1000000) {
    achievements.push({
      id: 'million-followers',
      name: '–ú–∏–ª–ª–∏–æ–Ω–Ω–∏–∫',
      description: '–ù–∞–±—Ä–∞–ª–∏ 1 –º–∏–ª–ª–∏–æ–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤',
      icon: 'üë•'
    });
  }
  
  if (gameState.metrics.revenue >= 100000) {
    achievements.push({
      id: 'revenue-king',
      name: '–ö–æ—Ä–æ–ª—å –¥–æ—Ö–æ–¥–æ–≤',
      description: '–î–æ—Å—Ç–∏–≥–ª–∏ –º–µ—Å—è—á–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞ $100K+',
      icon: 'üí∞'
    });
  }
  
  if (gameState.metrics.influence >= 100) {
    achievements.push({
      id: 'influence-master',
      name: '–ú–∞—Å—Ç–µ—Ä –≤–ª–∏—è–Ω–∏—è',
      description: '–î–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤–ª–∏—è–Ω–∏—è',
      icon: 'üëë'
    });
  }
  
  if (gameState.metrics.reputation >= 90) {
    achievements.push({
      id: 'reputation-saint',
      name: '–°–≤—è—Ç–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–∏',
      description: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–ª–∏ —Ä–µ–ø—É—Ç–∞—Ü–∏—é –≤—ã—à–µ 90%',
      icon: 'üòá'
    });
  }
  
  const activePlatforms = Object.values(gameState.platforms).filter(p => p.strategy).length;
  if (activePlatforms >= 4) {
    achievements.push({
      id: 'platform-master',
      name: '–í–ª–∞—Å—Ç–µ–ª–∏–Ω –ø–ª–∞—Ç—Ñ–æ—Ä–º',
      description: '–ê–∫—Ç–∏–≤–Ω—ã –Ω–∞ –≤—Å–µ—Ö 4 –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ',
      icon: 'üåê'
    });
  }
  
  return achievements;
}

// –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è –º–µ–¥–∏–∞-–º–∞–≥–Ω–∞—Ç–æ–≤
const EMPIRE_HINTS = {
  stage1: [
    '–ö–æ–Ω—Ç–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å —ç–º–æ—Ü–∏–∏ - —Ä–∞–≤–Ω–æ–¥—É—à–∏–µ —É–±–∏–≤–∞–µ—Ç –æ—Ö–≤–∞—Ç',
    '–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –≤–∞–∂–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤',
    '–ò–∑—É—á–∞–π—Ç–µ —Å–≤–æ—é –∞—É–¥–∏—Ç–æ—Ä–∏—é - —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –Ω–∏—Ö, –∞ –Ω–µ –¥–ª—è —Å–µ–±—è',
    '–¢—Ä–µ–Ω–¥—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –∏ —É—Ö–æ–¥—è—Ç, –Ω–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω–æ–π'
  ],
  stage2: [
    '–î–µ—Ñ–∏—Ü–∏—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞—É–¥–∏—Ç–æ—Ä–∏—è –≤–µ—Ä–∏—Ç –≤ –µ–≥–æ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å',
    '–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç —Å—Ç—Ä–æ–∏—Ç—Å—è –≥–æ–¥–∞–º–∏, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω –∑–∞ –º–∏–Ω—É—Ç—ã',
    '–õ—é–¥–∏ –ø–æ–∫—É–ø–∞—é—Ç –Ω–µ –ø—Ä–æ–¥—É–∫—Ç, –∞ —á—É–≤—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –¥–∞–µ—Ç',
    '–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Å–∏–ª—å–Ω–µ–µ –ª—é–±–æ–π —Ä–µ–∫–ª–∞–º—ã'
  ],
  stage3: [
    '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç, –Ω–æ –¥–µ–Ω—å–≥–∏ –¥–µ–ª–∞—é—Ç –Ω–∞ –ø–ª–∞—Ç–Ω–æ–º',
    '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ - —ç—Ç–æ –Ω–µ –∫–ª–∏–µ–Ω—Ç—ã, –∫–æ–Ω–≤–µ—Ä—Å–∏—è —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã',
    '–î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –¥–æ—Ö–æ–¥—ã - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –æ–¥–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –æ–ø–∞—Å–Ω–∞',
    '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏'
  ],
  stage4: [
    '–ú–∞—Å—à—Ç–∞–± —Ç—Ä–µ–±—É–µ—Ç —Å–∏—Å—Ç–µ–º, –∞ –Ω–µ –≥–µ—Ä–æ–∏—á–µ—Å–∫–∏—Ö —É—Å–∏–ª–∏–π',
    '–ö–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∫–∞–∫ —É—Å–∫–æ—Ä–∏—Ç—å —Ä–æ—Å—Ç, —Ç–∞–∫ –∏ –µ–≥–æ –∑–∞–º–µ–¥–ª–∏—Ç—å',
    '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏',
    '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –≤—Ä–µ–º—è –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π'
  ],
  stage5: [
    '–ö—Ä–∏–∑–∏—Å—ã –Ω–µ–∏–∑–±–µ–∂–Ω—ã - –≤–∞–∂–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å —Ä–µ–∞–∫—Ü–∏–∏',
    '–†–µ–ø—É—Ç–∞—Ü–∏—è - —ç—Ç–æ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç: –ª–µ–≥–∫–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å, —Å–ª–æ–∂–Ω–æ –Ω–∞–∫–æ–ø–∏—Ç—å',
    '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –±—É–¥—É—Ç –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏',
    '–ù–∞—Å–ª–µ–¥–∏–µ —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–µ –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏, –∞ –Ω–∞ –≤–ª–∏—è–Ω–∏–∏ –Ω–∞ –∂–∏–∑–Ω–∏ –ª—é–¥–µ–π'
  ]
};

function showEmpireHint(stage) {
  const hints = EMPIRE_HINTS[`stage${stage}`];
  if (hints && empireUI) {
    const randomHint = hints[Math.floor(Math.random() * hints.length)];
    empireUI.showToast(`üí° –°–æ–≤–µ—Ç –º–∞–≥–Ω–∞—Ç–∞: ${randomHint}`, 'info');
  }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞
let empireHintTimer = null;

function startEmpireHintSystem() {
  const isNewUser = !localStorage.getItem('empireQuestCompleted');
  
  if (isNewUser) {
    empireHintTimer = setInterval(() => {
      if (empireEngine && empireEngine.getGameState().isRunning) {
        const currentStage = empireEngine.getGameState().currentStage;
        showEmpireHint(currentStage);
      }
    }, 45000); // –ö–∞–∂–¥—ã–µ 45 —Å–µ–∫—É–Ω–¥
  }
}

function stopEmpireHintSystem() {
  if (empireHintTimer) {
    clearInterval(empireHintTimer);
    empireHintTimer = null;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
setTimeout(startEmpireHintSystem, 10000);

// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', stopEmpireHintSystem);

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞–ª—å–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º
function saveEmpirePreferences(preferences) {
  localStorage.setItem('empireQuestPreferences', JSON.stringify(preferences));
}

function loadEmpirePreferences() {
  const prefs = localStorage.getItem('empireQuestPreferences');
  return prefs ? JSON.parse(prefs) : {
    preferredStrategies: [],
    favoritePlatforms: [],
    completedCount: 0,
    bestScore: 0
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –æ–± –∏–º–ø–µ—Ä–∏–∏
function generateEmpireReport(gameState) {
  const totalFollowers = gameState.metrics.followers;
  const totalRevenue = gameState.metrics.revenue;
  const influence = gameState.metrics.influence;
  const reputation = gameState.metrics.reputation;
  
  const platformStats = empireEngine.getPlatformStats();
  const mostSuccessful = Object.entries(platformStats).reduce((best, [platform, stats]) => 
    stats.performance > (best.performance || 0) ? { platform, ...stats } : best
  , {});
  
  return {
    summary: {
      totalScore: empireEngine.calculateFinalMetrics().totalScore,
      totalFollowers,
      totalRevenue,
      influence,
      reputation,
      stagesCompleted: Object.values(gameState.stageProgress).filter(s => s.completed).length
    },
    platforms: platformStats,
    mostSuccessfulPlatform: mostSuccessful.platform || 'none',
    strategies: gameState.placedStrategies.length,
    events: gameState.events.length,
    recommendations: empireEngine.getRecommendations(),
    achievements: checkEmpireAchievements(gameState)
  };
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —à–∞—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function generateShareText(results) {
  const score = results.finalMetrics.totalScore;
  const followers = InfluenceDataService.formatNumber(results.finalMetrics.followers);
  const revenue = InfluenceDataService.formatNumber(results.finalMetrics.revenue);
  
  return `üè∞ –°–æ–∑–¥–∞–ª –º–µ–¥–∏–∞-–∏–º–ø–µ—Ä–∏—é!\nüë• ${followers} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\nüí∞ $${revenue}/–º–µ—Å—è—Ü\nüìä ${score} –æ—á–∫–æ–≤ –≤–ª–∏—è–Ω–∏—è\n\n#–ò–º–ø–µ—Ä–∏—è–í–ª–∏—è–Ω–∏—è #–ú–µ–¥–∏–∞–ú–∞–≥–Ω–∞—Ç`;
}

function shareResults(results) {
  const text = generateShareText(results);
  
  if (navigator.share) {
    navigator.share({
      title: '–ú–æ—è –∏–º–ø–µ—Ä–∏—è –≤–ª–∏—è–Ω–∏—è',
      text: text
    });
  } else {
    // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ –±–µ–∑ Web Share API
    navigator.clipboard.writeText(text).then(() => {
      empireUI?.showToast('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
    });
  }
}

// –°–∏—Å—Ç–µ–º–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const MOTIVATION_MESSAGES = [
  "üöÄ –ö–∞–∂–¥—ã–π –≤–µ–ª–∏–∫–∏–π –º–µ–¥–∏–∞-–º–∞–≥–Ω–∞—Ç –Ω–∞—á–∏–Ω–∞–ª —Å –ø–µ—Ä–≤–æ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞",
  "üí° –¢–≤–æ—Ä—á–µ—Å–∫–∏–π –∫—Ä–∏–∑–∏—Å - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è –∏–Ω–Ω–æ–≤–∞—Ü–∏–π", 
  "üëë –í–ª–∏—è–Ω–∏–µ –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –Ω–µ —á–∏—Å–ª–∞–º–∏, –∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –∂–∏–∑–Ω–∏ –ª—é–¥–µ–π",
  "üéØ –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –¥–µ–Ω—å–≥–∏ –ø—Ä–∏–¥—É—Ç —Å–ª–µ–¥–æ–º",
  "üî• –ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ –ø–æ–±–µ–∂–¥–∞–µ—Ç —Ç–∞–ª–∞–Ω—Ç, –∫–æ–≥–¥–∞ —Ç–∞–ª–∞–Ω—Ç –Ω–µ –ø–æ—Å—Ç–æ—è–Ω–µ–Ω"
];

function showMotivationalMessage() {
  const message = MOTIVATION_MESSAGES[Math.floor(Math.random() * MOTIVATION_MESSAGES.length)];
  if (empireUI) {
    empireUI.showToast(message, 'info');
  }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã
setInterval(() => {
  if (empireEngine && empireEngine.getGameState().isRunning) {
    showMotivationalMessage();
  }
}, 120000);

console.log('üëë –ö–≤–µ—Å—Ç "–ò–º–ø–µ—Ä–∏—è –≤–ª–∏—è–Ω–∏—è" –≥–æ—Ç–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –º–µ–¥–∏–∞-–∏–º–ø–µ—Ä–∏–∏!');
