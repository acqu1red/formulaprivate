from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Updater, CommandHandler, CallbackContext
from queue import Queue
from telegram.ext import ApplicationBuilder
import pytz
from telegram.ext import CallbackQueryHandler

MINIAPP_URL = "https://acqu1red.github.io/tourmalineGG/webapp/"

# ---------- Builders for messages & keyboards ----------

def build_start_content():
    text = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —à–ª—é–∑ –≤ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ <b>–§–û–†–ú–£–õ–ê</b>, –≥–¥–µ –∑–Ω–∞–Ω–∏—è –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ü–µ–Ω–Ω—ã–µ, –∂–∏–∑–Ω–µ–Ω–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ.\n\n"
        "<b>üí≥ –ü–æ–¥–ø–∏—Å–∫–∞ - –µ–∂–µ–º–µ—Å—è—á–Ω–∞—è 1500‚ÇΩ –∏–ª–∏ ~15$</b>, –æ–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤ –ª—é–±–æ–π –≤–∞–ª—é—Ç–µ –∏ –∫—Ä–∏–ø—Ç–µ.\n"
        "<b>‚¨áÔ∏è –ù–∏–∂–µ ‚Äî –∫–Ω–æ–ø–∫–∞. –ñ–º–µ—à—å ‚Äî –∏ –ø—Ä–æ—Ö–æ–¥–∏—à—å —Ç—É–¥–∞, –≥–¥–µ –ª—é–¥–∏ –Ω–µ –Ω–æ—é—Ç, –∞ –µ–±—É—Ç —ç—Ç–æ—Ç –º–∏—Ä –≤ –æ–±–µ —â–µ–∫–∏.</b>"
    )
    keyboard = [
        [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data='payment')],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–Ω–∞–ª–µ", callback_data='more_info')],
        [InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", web_app=WebAppInfo(url=MINIAPP_URL))]
    ]
    return text, InlineKeyboardMarkup(keyboard)


def build_payment_content():
    text = (
        "üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ë–∞–∑—É\n"
        "1 –º–µ—Å—è—Ü 1500 —Ä—É–±–ª–µ–π\n"
        "6 –º–µ—Å—è—Ü–µ–≤ 8000 —Ä—É–±–ª–µ–π\n"
        "12 –º–µ—Å—è—Ü–µ–≤ 10 000 —Ä—É–±–ª–µ–π\n\n"
        "*—Ü–µ–Ω–∞ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö/–µ–≤—Ä–æ - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ –Ω—ã–Ω–µ—à–Ω–µ–º—É –∫—É—Ä—Å—É\n"
        "*–æ–ø–ª–∞—á–∏–≤–∞–π –ª—é–±–æ–π –∫–∞—Ä—Ç–æ–π –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö/–µ–≤—Ä–æ/—Ä—É–±–ª—è—Ö, –±–æ—Ç —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å–∞–º\n\n"
        "–û–ø–ª–∞—Ç–∏—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø\nüëáüëáüëá"
    )
    keyboard = [
        [InlineKeyboardButton("1 –º–µ—Å—è—Ü", callback_data='pay_1_month')],
        [InlineKeyboardButton("6 –º–µ—Å—è—Ü–µ–≤", callback_data='pay_6_months')],
        [InlineKeyboardButton("12 –º–µ—Å—è—Ü–µ–≤", callback_data='pay_12_months')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back')]
    ]
    return text, InlineKeyboardMarkup(keyboard)


def build_more_info_content():
    text = (
        "–§–û–†–ú–£–õ–ê ‚Äî —ç—Ç–æ –∑–æ–ª–æ—Ç–æ–π —Ä—é–∫–∑–∞–∫ –∑–Ω–∞–Ω–∏–π, —Å –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –º–æ–∂–µ—à—å –≤—ã–ª–µ–∑—Ç–∏ –∏–∑ –ª—é–±–æ–π –∂–æ–ø—ã.\n"
        "–¢—É—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ \"–º–æ—Ç–∏–≤–∞—Ü–∏—è\" –∏ \"—Ä–∞–∑–≤–∏—Ç–∏–µ\", –∞ —Ä–∞–±–æ—á–∏–µ —Å—Ö–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –Ω–µ –Ω–∞–π–¥—ë—à—å –¥–∞–∂–µ –µ—Å–ª–∏ –±—É–¥–µ—à—å –∫–æ–ø–∞—Ç—å –µ–±—É—á–∏–π –î–∞—Ä–∫–Ω–µ—Ç.\n"
        "üß† –ü–æ–¥–∫–∞—Å—Ç—ã —Å —Ç–∞–π–º–∫–æ–¥–∞–º–∏ ‚Äî –æ—Ç –ü–†–û–§–ê–ô–õ–ò–ù–ì–ê –¥–æ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π –±–∞–±, –æ—Ç –ü–°–ò–•–û–¢–ò–ü–û–í –¥–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ —Å–ø–µ—Ü—Å–ª—É–∂–±\n"
        "üíâ –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π –ë–ò–û–•–ê–ö–ò–ù–ì ‚Äî –ø–æ—á–µ–º—É —Ç–µ–±–µ –ø–ª–æ—Ö–æ –∏ –∫–∞–∫ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –±–æ–≥–æ–º\n"
        "üí∏ –£—Ä–æ–∫–∏ –ø–æ –§–†–û–î–£, –≥–¥–µ –∏–∑ –Ω—É–ª—è –¥–µ–ª–∞–µ—Ç—Å—è $5000+ –≤ –º–µ—Å—è—Ü, –µ—Å–ª–∏ –Ω–µ –µ–±–ª–∞–Ω\n"
        "üß± –ö–∞–∫ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É, –æ—Ç—à–∏—Ç—å —Å–∞–º–æ–±–∏—á–µ–≤–∞–Ω–∏–µ –∏ –Ω–∞–∫–æ–Ω–µ—Ü —Å—Ç–∞—Ç—å –º–∞—à–∏–Ω–æ–π, –∞ –Ω–µ –º—è–º–ª–µ–π\n"
        "üìà –ê–≤—Ç–æ—Ä—Å–∫–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ —Ç—Ä–µ–π–¥–∏–Ω–≥—É ‚Äî –æ—Ç $500/–º–µ—Å –Ω–∞ –∞–≤—Ç–æ–ø–∏–ª–æ—Ç–µ\n"
        "‚ö° –°–∫–∞–ª—å–ø–∏–Ω–≥ –∏ –±–∏—Ä–∂–∏ ‚Äî –∫–∞–∫ —Ö–∏—Ç—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É, –Ω–µ —Ç–µ—Ä—è—è –±–∞–±–∫–∏ –Ω–∞ –∫–æ–º–∏—Å—Å–∏—è—Ö\n"
        "üé• –°—Ç—Ä–∏–º—ã –∫–∞–∂–¥—ã–µ 2 –Ω–µ–¥–µ–ª–∏, –≥–¥–µ —Ä–∞–∑–±–∏—Ä–∞—é –≤–æ–ø—Ä–æ—Å—ã –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: –∑–¥–æ—Ä–æ–≤—å–µ, –¥–µ–Ω—å–≥–∏, –ø—Å–∏—Ö–∏–∫–∞, –º—ã—à–ª–µ–Ω–∏–µ\n\n"
        "–ò —ç—Ç–æ –ª–∏—à—å –º–∞–ª–∞—è —á–∞—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ —Ç–µ–±—è –æ–∂–∏–¥–∞–µ—Ç –≤ –§–æ—Ä–º—É–ª–µ.\n"
        "–≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∞–Ω–∞–ª. –≠—Ç–æ —Å–∏–ª–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ç–≤–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –ø–æ–¥ –Ω–æ–≤–æ–≥–æ —Ç–µ–±—è.\n"
        "–í–æ–∫—Ä—É–≥ —Ç–µ–±—è ‚Äî –º–∏–ª–ª–∏–æ–Ω —Å–ø–æ—Å–æ–±–æ–≤ —Å–¥–µ–ª–∞—Ç—å –±–∞–±–∫–∏, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–¥–µ–π –∏ –Ω–µ –ø–∞—Ö–∞—Ç—å, –ø–æ–∫–∞ –¥—Ä—É–≥–∏–µ –ø–∞—à—É—Ç.\n"
        "–¢—ã –±—É–¥–µ—à—å —Å—á–∏—Ç—ã–≤–∞—Ç—å –ª—é–¥–µ–π —Å –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏–∑ –≤–æ–∑–¥—É—Ö–∞ –∏ –Ω–µ—Å—Ç–∏ —Å–µ–±—è –∫–∞–∫ –∫–æ—Ä–æ–ª—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –∑–Ω–∞–µ—à—å –±–æ–ª—å—à–µ, —á–µ–º –æ–Ω–∏ –∫–æ–≥–¥–∞-–ª–∏–±–æ –ø–æ–π–º—É—Ç.\n\n"
        "–ö–Ω–æ–ø–∫–∞ –≤–Ω–∏–∑—É ‚¨áÔ∏è. –¢–∞–º –Ω–µ –ø—Ä–æ—Å—Ç–æ –∏–Ω—Ñ–∞. –¢–∞–º –≤—ã—Ö–æ–¥ –∏–∑ —Å—Ç–∞–¥–∞.\n"
        "–†–µ—à–∞–π."
    )
    keyboard = [
        [InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", web_app=WebAppInfo(url=MINIAPP_URL))],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back')]
    ]
    return text, InlineKeyboardMarkup(keyboard)


def build_checkout_content(duration_label: str):
    text = (
        f"ü¶ç –ó–ê–ö–†–´–¢–´–ô –ö–ê–ù–ê–õ \"–û–°–ù–û–í–ê\" –Ω–∞ {duration_label}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –≤–∏–¥ –æ–ø–ª–∞—Ç—ã:\n"
        "*–µ—Å–ª–∏ –≤—ã –∏–∑ –£–∫—Ä–∞–∏–Ω—ã, –≤–∫–ª—é—á–∏—Ç–µ vpn\n"
        "*–ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∫–∞—Ä—Ç–æ–π ‚Äî –æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 –¥–Ω–µ–π\n"
        "*–¥–∞–ª–µ–µ ‚Äî –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–¥–ø–∏—Å–∫–æ–π –≤ –ú–µ–Ω—é –±–æ—Ç–∞\n"
        "*–æ–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–π –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Ç–∞—Ä–∏—Ñ–∞—Ö 6/12 –º–µ—Å"
    )
    keyboard = [
        [InlineKeyboardButton("üí≥ –ö–∞—Ä—Ç–∞ (–ª—é–±–∞—è –≤–∞–ª—é—Ç–∞)", callback_data='noop')],
        [InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", web_app=WebAppInfo(url=MINIAPP_URL))],
        [InlineKeyboardButton("üìÑ –î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã", callback_data='noop')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='payment')]
    ]
    return text, InlineKeyboardMarkup(keyboard)


# ---------- Command handlers (send new messages) ----------

# Define the start command handler
async def start(update: Update, context: CallbackContext) -> None:
    text, markup = build_start_content()
    await update.effective_message.reply_text(text, parse_mode='HTML', reply_markup=markup)


# Define the payment command handler
async def payment(update: Update, context: CallbackContext) -> None:
    text, markup = build_payment_content()
    await update.effective_message.reply_text(text, parse_mode='HTML', reply_markup=markup)


# Define the more_info command handler
async def more_info(update: Update, context: CallbackContext) -> None:
    text, markup = build_more_info_content()
    await update.effective_message.reply_text(text, parse_mode='HTML', reply_markup=markup)


# ---------- Callback query handler (edits existing message) ----------

async def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    data = query.data

    if data == 'payment':
        text, markup = build_payment_content()
        await query.edit_message_text(text=text, parse_mode='HTML', reply_markup=markup)
    elif data == 'more_info':
        text, markup = build_more_info_content()
        await query.edit_message_text(text=text, parse_mode='HTML', reply_markup=markup)
    elif data in ('pay_1_month', 'pay_6_months', 'pay_12_months'):
        duration_map = {
            'pay_1_month': '1 –º–µ—Å—è—Ü',
            'pay_6_months': '6 –º–µ—Å—è—Ü–µ–≤',
            'pay_12_months': '12 –º–µ—Å—è—Ü–µ–≤',
        }
        text, markup = build_checkout_content(duration_map[data])
        await query.edit_message_text(text=text, parse_mode='HTML', reply_markup=markup)
    elif data == 'back':
        text, markup = build_start_content()
        await query.edit_message_text(text=text, parse_mode='HTML', reply_markup=markup)
    else:
        return


# ---------- App bootstrap ----------

# Main function to start the bot
def main() -> None:
    application = ApplicationBuilder().token("8354723250:AAEWcX6OojEi_fN-RAekppNMVTAsQDU0wvo").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("payment", payment))
    application.add_handler(CommandHandler("more_info", more_info))
    application.add_handler(CallbackQueryHandler(button))

    application.run_polling()


if __name__ == '__main__':
    main()
