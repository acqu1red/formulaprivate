#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
"""

import requests
import json
import time

def test_webhook_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å webhook"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å webhook...")
    
    try:
        response = requests.get("https://formulaprivate-productionpaymentuknow.up.railway.app/webhook-info")
        if response.status_code == 200:
            data = response.json()
            current_url = data.get('current_url', '')
            expected_url = data.get('expected_url', '')
            needs_fix = data.get('needs_fix', False)
            
            print(f"‚úÖ Webhook —Å—Ç–∞—Ç—É—Å:")
            print(f"   –¢–µ–∫—É—â–∏–π URL: {current_url}")
            print(f"   –û–∂–∏–¥–∞–µ–º—ã–π URL: {expected_url}")
            print(f"   –¢—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {needs_fix}")
            
            return current_url == expected_url
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ webhook: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook: {e}")
        return False

def test_api_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoint"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint...")
    
    test_data = {
        "user_id": "123456789",
        "email": "test@example.com",
        "tariff": "1_month",
        "price": 50.0
    }
    
    try:
        response = requests.post(
            "https://formulaprivate-productionpaymentuknow.up.railway.app/api/create-payment",
            json=test_data,
            headers={"Content-Type": "application/json"},
            timeout=30
        )
        
        print(f"üì° API –æ—Ç–≤–µ—Ç: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            payment_url = result.get('payment_url')
            
            if payment_url:
                print(f"‚úÖ API endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç: {payment_url}")
                return True
            else:
                print("‚ùå URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"üì° –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def test_webhook_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç webhook endpoint"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook endpoint...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º GET –∑–∞–ø—Ä–æ—Å
        response = requests.get("https://formulaprivate-productionpaymentuknow.up.railway.app/webhook")
        print(f"üì° GET webhook –æ—Ç–≤–µ—Ç: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ Webhook endpoint –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå Webhook endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ webhook endpoint: {e}")
        return False

def test_mini_apps_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Mini Apps"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Mini Apps...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Mini Apps
    test_data = {
        "step": "final_data",
        "email": "test@example.com",
        "tariff": "1_month",
        "price": 50.0,
        "userId": "123456789"
    }
    
    try:
        # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64 (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç Mini Apps)
        import base64
        json_string = json.dumps(test_data)
        base64_data = base64.b64encode(json_string.encode('utf-8')).decode('utf-8')
        
        print(f"üì§ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {json.dumps(test_data, indent=2)}")
        print(f"üì§ Base64 –¥–∞–Ω–Ω—ã–µ: {base64_data}")
        
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –Ω–∞—à –±–æ—Ç)
        decoded_data = base64.b64decode(base64_data).decode('utf-8')
        parsed_data = json.loads(decoded_data)
        
        print(f"üì§ –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {json.dumps(parsed_data, indent=2)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
        if (parsed_data.get('step') == 'final_data' and 
            parsed_data.get('email') and 
            parsed_data.get('tariff') and 
            parsed_data.get('price')):
            print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö Mini Apps —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö Mini Apps")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Mini Apps: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: Webhook —Å—Ç–∞—Ç—É—Å
    webhook_ok = test_webhook_status()
    
    # –¢–µ—Å—Ç 2: API endpoint
    api_ok = test_api_endpoint()
    
    # –¢–µ—Å—Ç 3: Webhook endpoint
    webhook_endpoint_ok = test_webhook_endpoint()
    
    # –¢–µ—Å—Ç 4: Mini Apps –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
    mini_apps_ok = test_mini_apps_integration()
    
    print("\n" + "=" * 60)
    print("üéØ –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"‚úÖ Webhook —Å—Ç–∞—Ç—É—Å: {'–†–∞–±–æ—Ç–∞–µ—Ç' if webhook_ok else '–û—à–∏–±–∫–∞'}")
    print(f"‚úÖ API endpoint: {'–†–∞–±–æ—Ç–∞–µ—Ç' if api_ok else '–û—à–∏–±–∫–∞'}")
    print(f"‚úÖ Webhook endpoint: {'–†–∞–±–æ—Ç–∞–µ—Ç' if webhook_endpoint_ok else '–û—à–∏–±–∫–∞'}")
    print(f"‚úÖ Mini Apps –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {'–†–∞–±–æ—Ç–∞–µ—Ç' if mini_apps_ok else '–û—à–∏–±–∫–∞'}")
    
    if all([webhook_ok, api_ok, webhook_endpoint_ok, mini_apps_ok]):
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üì± –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞: @FormulaPrivateBot")
        print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
        print("3. –ù–∞–∂–º–∏—Ç–µ 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ Mini Apps'")
        print("4. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –Ω–∞–∂–º–∏—Ç–µ '–û–ø–ª–∞—Ç–∏—Ç—å'")
        print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å")
        if not webhook_ok:
            print("   - Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        if not api_ok:
            print("   - API endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        if not webhook_endpoint_ok:
            print("   - Webhook endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        if not mini_apps_ok:
            print("   - –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö Mini Apps")

if __name__ == "__main__":
    main()
