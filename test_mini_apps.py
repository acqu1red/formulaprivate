#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Mini Apps
"""

import requests
import json

def test_mini_apps_data():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –æ—Ç Mini Apps"""
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –æ—Ç Mini Apps...")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç Mini Apps
        mini_apps_data = {
            "step": "final_data",
            "email": "test@example.com",
            "tariff": "1_month",
            "price": 50.0,
            "userId": "123456789"
        }
        
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ: {json.dumps(mini_apps_data, indent=2)}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ webhook
        response = requests.post(
            "https://formulaprivate-productionpaymentuknow.up.railway.app/webhook",
            json={
                "update_id": 123456789,
                "message": {
                    "message_id": 1,
                    "from": {
                        "id": 123456789,
                        "first_name": "Test",
                        "username": "testuser",
                        "is_bot": False
                    },
                    "chat": {
                        "id": 123456789,
                        "type": "private"
                    },
                    "date": 1755091200,
                    "web_app_data": {
                        "data": json.dumps(mini_apps_data),
                        "button_text": "–û–ø–ª–∞—Ç–∏—Ç—å"
                    }
                }
            },
            headers={"Content-Type": "application/json"}
        )
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üì° –û—Ç–≤–µ—Ç: {response.text}")
        
        return response.status_code == 200
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Mini Apps: {e}")
        import traceback
        print(f"üìã Traceback: {traceback.format_exc()}")
        return False

if __name__ == '__main__':
    success = test_mini_apps_data()
    if success:
        print("‚úÖ Mini Apps —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå Mini Apps —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª!")
